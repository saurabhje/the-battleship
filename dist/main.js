(()=>{"use strict";const e=function(){let e=Array(100).fill(null),t=[],n=[];return{placeShip:function(n,r){r.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}};e();const t=function(e,t){e.innerHTML="";for(let t=0;t<100;t++){const n=document.createElement("div");n.dataset.index=t,n.classList.add("cell"),n.innerText=`${t}`,e.appendChild(n)}},n=function(e,t){let n=0;return{length:t,hit:()=>(n++,n),isSunk:()=>n===t,get name(){return e},get hits(){return n}}};!function(r,o){let i,l;l=e(),i=e(),l.placeShip(n("destroyer",3),[1,2,3]),l.placeShip(n("cruise",3),[5,6,7]),i.placeShip(n("destroyer",3),[1,2,3]),i.placeShip(n("cruise",3),[8,9,10]);const a=document.getElementById("playerboard"),c=document.getElementById("compboard");t(a,l),t(c,i);let u=r,s=!1;function d(){return u=u===r?o:r}function p(){return l.allShipsSunk()?(s=!0,void console.log("Game over! Computer won!")):i.allShipsSunk()?(s=!0,void console.log("Game over! Player won!")):void 0}c.addEventListener("click",(e=>{if(s)return;if(u!==r)return;const t=e.target.dataset.index,n=i.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#4a4848",p(),u=d(),setTimeout((()=>{if(u!==o)return;let e=Math.floor(100*Math.random());const t=l.receiveAttack(e);a.querySelector(`[data-index='${e}']`).style.backgroundColor=!0===t?"#f70202":"#4a4848",p(),u=d()}),700)}))}({name:"player1"},{name:"player2"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,