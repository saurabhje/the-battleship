(()=>{"use strict";const e=function(e,t){e.innerHTML="";for(let n=0;n<100;n++){const l=document.createElement("div");l.dataset.index=n,"player"==t?(l.classList.add("cell"),l.classList.add(`h${n}`)):"computer"==t&&(l.classList.add("enemycell"),l.classList.add(`e${n}`)),e.appendChild(l)}},t=function(){let e=Array(100).fill(null),t=[],n=[];return{getShips:function(){return t.length},getBoard:function(){return e},placeShip:function(n,l){let r=n.length,o=[];for(let e=0;e<r;e++)o.push(l+e);o.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}},n=function(e){let t=0;return{length:e,hit:()=>(t++,t),isSunk:()=>t===e,get hits(){return t}}};function l(e,t){if("player"===e){const e=[5,4,3,2];let l=e.length;const o=document.querySelectorAll(".cell");let u=!0,c=0;const a=document.getElementById("turn");u&&o.forEach((o=>{o.addEventListener("click",(o=>{const i=o.target,s=parseInt(i.dataset.index),d=function(e,t,n){const l=e.getBoard();for(let e=0;e<n;e++)if(null!==l[t+e])return!1;return!0}(t,s,e[c]),f=r(s,e[c]);if(a.innerText=0==c?"Place your Submarine":1==c?"Place your Attackerr":2==c?"Place your Ship":"Play",d&&f){const r=n(e[c]);t.placeShip(r,s);for(let t=0;t<e[c];t++)document.querySelector(`.h${s+t}`).style.backgroundColor="#292828";c++,c===l&&(u=!1)}}))}))}else if("computer"===e){const e=[5,4,3,2];let l=e.length,o=0;for(;o<l;){let l=n(e[o]),u=Math.floor(100*Math.random());r(u,e[o])&&(t.placeShip(l,u),o++)}}}function r(e,t){let n=e+t-1,l=Math.floor(e/10);return!(Math.floor(n/10)>l)}!function(n,r){let o,u;u=t(),o=t();const c=[],a=document.getElementById("playerboard"),i=document.getElementById("compboard");e(a,"player"),e(i,"computer"),l("player",u),l("computer",o),console.log(o.getShips());let s,d=new Set,f=n,h=!1,p=[],m=null,y=null;function g(e){if(h)return;const t=e.target.dataset.index,n=o.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#02d91b"}function S(){null!=m||null!=y?(p.pop(),null!=m?(s=m,m-=1):null!=y&&(s=y,y+=1)):s=k(),function(e){if(h)return;const t=u.receiveAttack(e),n=a.querySelector(`[data-index='${e}']`);!0===t?(n.style.backgroundColor="#f70202",p.push(e),null===m&&(m=e-1),d.has(m)&&(m=null),null===y&&(y=e+1),d.has(y)&&(y=null)):(n.style.backgroundColor="#02d91b",null!=m?m=null:y=null),d.add(e),E(),f=v()}(s)}function k(){let e=Math.floor(100*Math.random());for(;d.has(e);)e=Math.floor(100*Math.random());return d.has(e)&&k(),e}function v(){return f=f===n?r:n}function E(){return u.allShipsSunk()?(h=!0,document.getElementById("winner").innerText="Computer Win!",void i.removeEventListener("click",g)):o.allShipsSunk()?(h=!0,void(document.getElementById("winner").innerText="You Win!")):void 0}i.addEventListener("click",(e=>{const t=function(e){const t=e.target.dataset.index;return!c.includes(t)&&(c.push(t),!0)}(e);if(t){if(f!==n||h)return;g(e),E(),f=v(),setTimeout(S,100)}}))}({name:"Player"},{name:"Computer"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,