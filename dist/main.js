(()=>{"use strict";const e=function(e,t){e.innerHTML="";for(let n=0;n<100;n++){const r=document.createElement("div");r.dataset.index=n,"player"==t?(r.classList.add("cell"),r.classList.add(`h${n}`)):"computer"==t&&(r.classList.add("enemycell"),r.classList.add(`e${n}`)),e.appendChild(r)}},t=function(){let e=Array(100).fill(null),t=[],n=[];return{getShips:function(){return t.length},getBoard:function(){return e},placeShip:function(n,r){let l=n.length,o=[];for(let e=0;e<l;e++)o.push(r+e);o.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}},n=function(e){let t=0;return{length:e,hit:()=>(t++,t),isSunk:()=>t===e,get hits(){return t}}};function r(e,t){if("player"===e){const e=[5,4,3,2];let r=e.length;const o=document.querySelectorAll(".cell");let u=!0,c=0;const i=document.getElementById("turn");u&&o.forEach((o=>{o.addEventListener("click",(o=>{const a=o.target,s=parseInt(a.dataset.index),d=function(e,t,n){const r=e.getBoard();for(let e=0;e<n;e++)if(null!==r[t+e])return!1;return!0}(t,s,e[c]),f=l(s,e[c]);if(i.innerText=0==c?"Place your Submarine":1==c?"Place your Attackerr":2==c?"Place your Ship":"Play",d&&f){const l=n(e[c]);t.placeShip(l,s);for(let t=0;t<e[c];t++)document.querySelector(`.h${s+t}`).style.backgroundColor="#292828";c++,c===r&&(u=!1)}}))}))}else if("computer"===e){const e=[5,4,3,2];let r=e.length,o=0;for(;o<r;){let r=n(e[o]),u=Math.floor(100*Math.random());l(u,e[o])&&(t.placeShip(r,u),o++)}}}function l(e,t){let n=e+t-1,r=Math.floor(e/10);return!(Math.floor(n/10)>r)}!function(n,l){let o,u;u=t(),o=t();const c=[],i=document.getElementById("playerboard"),a=document.getElementById("compboard");e(i,"player"),e(a,"computer"),r("player",u),r("computer",o),console.log(o.getShips());let s,d=new Set,f=n,h=!1,m=null,p=null;function y(e){if(h)return;const t=e.target.dataset.index,n=o.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#02d91b"}function g(){null!=m||null!=p?null!=m?(s=m,m-=1):null!=p&&(s=p,p+=1):s=function(){let e=Math.floor(100*Math.random());for(;d.has(e);)e=Math.floor(100*Math.random());return m=e-1,p=e+1,e}(),function(e){if(h)return;const t=u.receiveAttack(e),n=i.querySelector(`[data-index='${e}']`);!0===t?n.style.backgroundColor="#f70202":(n.style.backgroundColor="#02d91b",null!=m?m=null:p=null),k(),f=S()}(s)}function S(){return f=f===n?l:n}function k(){return u.allShipsSunk()?(h=!0,document.getElementById("winner").innerText="Computer Win!",void a.removeEventListener("click",y)):o.allShipsSunk()?(h=!0,void(document.getElementById("winner").innerText="You Win!")):void 0}a.addEventListener("click",(e=>{const t=function(e){const t=e.target.dataset.index;return!c.includes(t)&&(c.push(t),!0)}(e);if(t){if(f!==n||h)return;y(e),k(),f=S(),setTimeout(g,100)}}))}({name:"Player"},{name:"Computer"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,