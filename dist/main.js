(()=>{"use strict";const e=function(e,t){e.innerHTML="";for(let n=0;n<100;n++){const o=document.createElement("div");o.dataset.index=n,"player"==t?(o.classList.add("cell"),o.classList.add(`h${n}`)):"yourmom"==t&&(o.classList.add("enemycell"),o.classList.add(`e${n}`)),o.innerText=`${n}`,e.appendChild(o)}},t=function(){let e=Array(100).fill(null),t=[],n=[];return{placeShip:function(n,o){let l=n.length,r=[];for(let e=1;e<l;e++)r.push(o+e);r.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}},n=function(e){let t=0;return{length:e,hit:()=>(t++,t),isSunk:()=>t===e,get hits(){return t}}};function o(e,t){if("player"===e){const e=[5,4,3,2];let o=e.length;const l=document.querySelectorAll(".cell");let r=!0,a=0;r&&l.forEach((l=>{l.addEventListener("click",(l=>{const c=l.target,i=parseInt(c.dataset.index);let u=i;const s=n(e[a]);t.placeShip(s,i);for(let t=0;t<e[a];t++)document.querySelector(`.h${u}`).style.backgroundColor="blue",u++;a++,a==o&&(r=!1)}))}))}else if("yourmom"===e){const e=[5,4,3,2];let o=e.length,l=0;for(;l<o;){let o=n(e[l]),r=Math.floor(100*Math.random()),a=r+e[l]-1,c=Math.floor(r/10);if(Math.floor(a/10)>c)continue;let i=r;t.placeShip(o,r);for(let t=0;t<e[l];t++)document.querySelector(`.e${i}`).style.backgroundColor="blue",i++;l++}}}!function(n,l){let r,a;a=t(),r=t();const c=document.getElementById("playerboard"),i=document.getElementById("compboard");e(c,"player"),e(i,"yourmom"),o("player",a),o("yourmom",r);let u=new Set,s=n,d=!1;function f(e){if(d)return;const t=e.target.dataset.index,n=r.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#4a4848"}function h(){if(d)return;let e=Math.floor(100*Math.random());for(;u.has(e);)e=Math.floor(100*Math.random());const t=a.receiveAttack(e);c.querySelector(`[data-index='${e}']`).style.backgroundColor=!0===t?"#f70202":"#4a4848",u.add(e),y(),s=m()}function m(){return s=s===n?l:n}function y(){return a.allShipsSunk()?(d=!0,console.log("Game over! Computer won!"),void i.removeEventListener("click",f)):r.allShipsSunk()?(d=!0,void console.log("Game over! Player won!")):void 0}i.addEventListener("click",(e=>{s!==n||d||(f(e),y(),s=m(),setTimeout(h,500))}))}({name:"player1"},{name:"player2"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,