(()=>{"use strict";const e=function(e,t){e.innerHTML="";for(let n=0;n<100;n++){const l=document.createElement("div");l.dataset.index=n,"player"==t?(l.classList.add("cell"),l.classList.add(`h${n}`)):"yourmom"==t&&(l.classList.add("enemycell"),l.classList.add(`e${n}`)),l.innerText=`${n}`,e.appendChild(l)}},t=function(){let e=Array(100).fill(null),t=[],n=[];return{placeShip:function(n,l){let o=n.length,r=[];for(let e=1;e<o;e++)r.push(l+e);r.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}},n=function(e){let t=0;return{length:e,hit:()=>(t++,t),isSunk:()=>t===e,get hits(){return t}}};function l(e,t){if("player"==e){const e=[5,4,3,2];let l=e.length;const o=document.querySelectorAll(".cell");let r=!0,c=0;r&&o.forEach((o=>{o.addEventListener("click",(o=>{const a=o.target,i=parseInt(a.dataset.index);let u=i;const s=n(e[c]);t.placeShip(s,i);for(let t=0;t<e[c];t++)document.querySelector(`.h${u}`).style.backgroundColor="blue",u++;c++,c==l&&(r=!1)}))}))}else if("yourmom"==e){const e=[5,4,3,2];let l=e.length;for(let o=0;o<l;o++){let l=Math.floor(100*Math.random()),r=l;console.log(`hello${r}`);let c=n(e[o]);t.placeShip(c,l);for(let t=0;t<e[o];t++)document.querySelector(`.e${r}`).style.backgroundColor="blue",r++}}}!function(n,o){let r,c;c=t(),r=t();const a=document.getElementById("playerboard"),i=document.getElementById("compboard");e(a,"player"),e(i,"yourmom"),l("player",c),l("yourmom",r);let u=n,s=!1;function d(e){if(s)return;const t=e.target.dataset.index,n=r.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#4a4848"}function m(){if(s)return;let e=Math.floor(100*Math.random());const t=c.receiveAttack(e);a.querySelector(`[data-index='${e}']`).style.backgroundColor=!0===t?"#f70202":"#4a4848",h(),u=f()}function f(){return u=u===n?o:n}function h(){return c.allShipsSunk()?(s=!0,console.log("Game over! Computer won!"),void i.removeEventListener("click",d)):r.allShipsSunk()?(s=!0,void console.log("Game over! Player won!")):void 0}i.addEventListener("click",(e=>{u!==n||s||(d(e),h(),u=f(),setTimeout(m,500))}))}({name:"player1"},{name:"player2"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,