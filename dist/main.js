(()=>{"use strict";const e=function(e,t){e.innerHTML="";for(let n=0;n<100;n++){const o=document.createElement("div");o.dataset.index=n,"player"==t?(o.classList.add("cell"),o.classList.add(`h${n}`)):"computer"==t&&(o.classList.add("enemycell"),o.classList.add(`e${n}`)),o.innerText=`${n}`,e.appendChild(o)}},t=function(){let e=Array(100).fill(null),t=[],n=[];return{board:e,getBoard:function(){return e},placeShip:function(n,o){let r=n.length,l=[];for(let e=0;e<r;e++)l.push(o+e);l.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}},n=function(e){let t=0;return{length:e,hit:()=>(t++,t),isSunk:()=>t===e,get hits(){return t}}};function o(e,t){if("player"===e){const e=[5,4,3,2];let o=e.length;const l=document.querySelectorAll(".cell");let c=!0,a=0;c&&l.forEach((l=>{l.addEventListener("click",(l=>{const u=l.target,i=parseInt(u.dataset.index),s=function(e,t,n){const o=e.getBoard();for(let e=0;e<n;e++)if(null!==o[t+e])return!1;return!0}(t,i,e[a]),d=r(i,e[a]);if(s&&d){console.log(t.board);const r=n(e[a]);t.placeShip(r,i);for(let t=0;t<e[a];t++)document.querySelector(`.h${i+t}`).style.backgroundColor="blue";a++,a===o&&(c=!1)}}))}))}else if("computer"===e){const e=[5,4,3,2];let o=e.length,l=0;for(;l<o;){let o=n(e[l]),c=Math.floor(100*Math.random());if(!r(c,e[l]))continue;let a=c;t.placeShip(o,c);for(let t=0;t<e[l];t++)document.querySelector(`.e${a}`).style.backgroundColor="blue",a++;l++}}}function r(e,t){let n=e+t-1,o=Math.floor(e/10);return!(Math.floor(n/10)>o)}!function(n,r){let l,c;c=t(),l=t();const a=document.getElementById("playerboard"),u=document.getElementById("compboard");e(a,"player"),e(u,"computer"),o("player",c),o("computer",l);let i=new Set,s=n,d=!1;function f(e){if(d)return;const t=e.target.dataset.index,n=l.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#4a4848"}function h(){if(d)return;let e=Math.floor(100*Math.random());for(;i.has(e);)e=Math.floor(100*Math.random());const t=c.receiveAttack(e);a.querySelector(`[data-index='${e}']`).style.backgroundColor=!0===t?"#f70202":"#4a4848",i.add(e),p(),s=m()}function m(){return s=s===n?r:n}function p(){return c.allShipsSunk()?(d=!0,console.log("Game over! Computer won!"),void u.removeEventListener("click",f)):l.allShipsSunk()?(d=!0,void console.log("Game over! Player won!")):void 0}u.addEventListener("click",(e=>{s!==n||d||(f(e),p(),s=m(),setTimeout(h,500))}))}({name:"Player"},{name:"Computer"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,