(()=>{"use strict";const e=function(e,t){e.innerHTML="";for(let n=0;n<100;n++){const r=document.createElement("div");r.dataset.index=n,"player"==t?(r.classList.add("cell"),r.classList.add(`h${n}`)):"computer"==t&&(r.classList.add("enemycell"),r.classList.add(`e${n}`)),e.appendChild(r)}},t=function(){let e=Array(100).fill(null),t=[],n=[];return{getShips:function(){return t.length},getBoard:function(){return e},placeShip:function(n,r){let o=n.length,l=[];for(let e=0;e<o;e++)l.push(r+e);l.forEach((t=>{e[t]=n})),t.push(n)},receiveAttack:function(t){return null===e[t]?(n.push(t),!1):(e[t].hit(),!0)},allShipsSunk:function(){return t.every((e=>e.isSunk()))},missedAttacks:n}},n=function(e){let t=0;return{length:e,hit:()=>(t++,t),isSunk:()=>t===e,get hits(){return t}}};function r(e,t){if("player"===e){const e=[5,4,3,2];let r=e.length;const l=document.querySelectorAll(".cell");let c=!0,u=0;const i=document.getElementById("turn");c&&l.forEach((l=>{l.addEventListener("click",(l=>{const a=l.target,s=parseInt(a.dataset.index),d=function(e,t,n){const r=e.getBoard();for(let e=0;e<n;e++)if(null!==r[t+e])return!1;return!0}(t,s,e[u]),f=o(s,e[u]);if(i.innerText=0==u?"Place your Submarine":1==u?"Place your Attackerr":2==u?"Place your Ship":"Play",d&&f){const o=n(e[u]);t.placeShip(o,s);for(let t=0;t<e[u];t++)document.querySelector(`.h${s+t}`).style.backgroundColor="#292828";u++,u===r&&(c=!1)}}))}))}else if("computer"===e){const e=[5,4,3,2];let r=e.length,l=0;for(;l<r;){let r=n(e[l]),c=Math.floor(100*Math.random());o(c,e[l])&&(t.placeShip(r,c),l++)}}}function o(e,t){let n=e+t-1,r=Math.floor(e/10);return!(Math.floor(n/10)>r)}!function(n,o){let l,c;c=t(),l=t();const u=[],i=document.getElementById("playerboard"),a=document.getElementById("compboard");e(i,"player"),e(a,"computer"),r("player",c),r("computer",l),console.log(l.getShips());let s,d=new Set,f=n,h=!1,p=[];function m(e){if(h)return;const t=e.target.dataset.index,n=l.receiveAttack(t);e.target.style.backgroundColor=!0===n?"#f70202":"#02d91b"}function g(){if(p.length>0){const e=function(e){const t=[],n=e%10;return n>0&&t.push(e-1),n<9&&t.push(e+1),t}(p[p.length-1]);console.log(e);for(const t of e)if(!d.has(t)){s=t;break}p.pop()}else s=function(){let e=Math.floor(100*Math.random());for(;d.has(e);)e=Math.floor(100*Math.random());return e}();!function(e){if(h)return;const t=c.receiveAttack(e),n=i.querySelector(`[data-index='${e}']`);!0===t?(n.style.backgroundColor="#f70202",p.push(e),console.log(p)):n.style.backgroundColor="#02d91b",d.add(e),S(),f=y()}(s)}function y(){return f=f===n?o:n}function S(){return c.allShipsSunk()?(h=!0,document.getElementById("winner").innerText="Computer Win!",void a.removeEventListener("click",m)):l.allShipsSunk()?(h=!0,void(document.getElementById("winner").innerText="You Win!")):void 0}a.addEventListener("click",(e=>{const t=function(e){const t=e.target.dataset.index;return!u.includes(t)&&(u.push(t),!0)}(e);if(t){if(f!==n||h)return;m(e),S(),f=y(),setTimeout(g,100)}}))}({name:"Player"},{name:"Computer"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,